{"version":3,"sources":["serve-static.js"],"names":["encodeUrl","escapeHtml","parseUrl","resolve","send","mime","url","serveStatic","root","options","TypeError","opts","Object","create","fallthrough","redirect","setHeaders","maxage","maxAge","onDirectory","createRedirectDirectoryListener","createNotFoundDirectoryListener","req","res","next","method","statusCode","setHeader","end","originalUrl","original","path","pathname","forwardError","substr","stream","on","onFile","error","err","pipe","collapseLeadingSlashes","str","i","length","charCodeAt","createHtmlDocument","title","body","notFound","hasTrailingSlash","loc","format","doc","Buffer","byteLength"],"mappings":"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","file":"serve-static.js","sourcesContent":["import encodeUrl from \"encodeurl\";\r\nimport escapeHtml from \"escape-html\";\r\nimport parseUrl from \"parseurl\";\r\nimport { resolve } from \"path\";\r\nimport send, { mime } from \"./send\";\r\nimport url from \"url\";\r\nexport { mime };\r\n/**\r\n * @param {string} root\r\n * @param {object} [options]\r\n * @public\r\n */\r\nexport default function serveStatic(root, options) {\r\n    if (!root) {\r\n        throw new TypeError(\"root path required\");\r\n    }\r\n    if (typeof root !== \"string\") {\r\n        throw new TypeError(\"root path must be a string\");\r\n    }\r\n    // copy options object\r\n    var opts = Object.create(options || null);\r\n    // fall-though\r\n    var fallthrough = opts.fallthrough !== false;\r\n    // default redirect\r\n    var redirect = opts.redirect !== false;\r\n    // headers listener\r\n    var setHeaders = opts.setHeaders;\r\n    if (setHeaders && typeof setHeaders !== \"function\") {\r\n        throw new TypeError(\"option setHeaders must be function\");\r\n    }\r\n    // setup options for send\r\n    opts.maxage = opts.maxage || opts.maxAge || 0;\r\n    opts.root = resolve(root);\r\n    // construct directory listener\r\n    var onDirectory = redirect ? createRedirectDirectoryListener() : createNotFoundDirectoryListener();\r\n    return function serveStatic(req, res, next) {\r\n        if (req.method !== \"GET\" && req.method !== \"HEAD\") {\r\n            if (fallthrough) {\r\n                return next();\r\n            }\r\n            // method not allowed\r\n            res.statusCode = 405;\r\n            res.setHeader(\"Allow\", \"GET, HEAD\");\r\n            res.setHeader(\"Content-Length\", \"0\");\r\n            res.end();\r\n            return;\r\n        }\r\n        var originalUrl = parseUrl.original(req);\r\n        var path = parseUrl(req).pathname;\r\n        var forwardError = !fallthrough;\r\n        // make sure redirect occurs at mount\r\n        if (path === \"/\" && originalUrl.pathname.substr(-1) !== \"/\") {\r\n            path = \"\";\r\n        }\r\n        // create send stream\r\n        var stream = send(req, path, opts);\r\n        // add directory handler\r\n        stream.on(\"directory\", onDirectory);\r\n        // add headers listener\r\n        if (setHeaders) {\r\n            stream.on(\"headers\", setHeaders);\r\n        }\r\n        // add file listener for fallthrough\r\n        if (fallthrough) {\r\n            stream.on(\"file\", function onFile() {\r\n                // once file is determined, always forward error\r\n                forwardError = true;\r\n            });\r\n        }\r\n        // forward errors\r\n        stream.on(\"error\", function error(err) {\r\n            if (forwardError || !(err.statusCode < 500)) {\r\n                next(err);\r\n                return;\r\n            }\r\n            next();\r\n        });\r\n        // pipe\r\n        stream.pipe(res);\r\n    };\r\n}\r\n/**\r\n * Collapse all leading slashes into a single slash\r\n * @private\r\n */\r\nfunction collapseLeadingSlashes(str) {\r\n    var i = 0;\r\n    for (; i < str.length; i++) {\r\n        if (str.charCodeAt(i) !== 0x2f /* / */) {\r\n            break;\r\n        }\r\n    }\r\n    return i > 1 ? \"/\" + str.substr(i) : str;\r\n}\r\n/**\r\n * Create a minimal HTML document.\r\n *\r\n * @param {string} title\r\n * @param {string} body\r\n * @private\r\n */\r\nfunction createHtmlDocument(title, body) {\r\n    return (\"<!DOCTYPE html>\\n\" +\r\n        '<html lang=\"en\">\\n' +\r\n        \"<head>\\n\" +\r\n        '<meta charset=\"utf-8\">\\n' +\r\n        \"<title>\" +\r\n        title +\r\n        \"</title>\\n\" +\r\n        \"</head>\\n\" +\r\n        \"<body>\\n\" +\r\n        \"<pre>\" +\r\n        body +\r\n        \"</pre>\\n\" +\r\n        \"</body>\\n\" +\r\n        \"</html>\\n\");\r\n}\r\n/**\r\n * Create a directory listener that just 404s.\r\n * @private\r\n */\r\nfunction createNotFoundDirectoryListener() {\r\n    return function notFound() {\r\n        this.error(404);\r\n    };\r\n}\r\n/**\r\n * Create a directory listener that performs a redirect.\r\n * @private\r\n */\r\nfunction createRedirectDirectoryListener() {\r\n    return function redirect(res) {\r\n        if (this.hasTrailingSlash()) {\r\n            this.error(404);\r\n            return;\r\n        }\r\n        // get original URL\r\n        var originalUrl = parseUrl.original(this.req);\r\n        // append trailing slash\r\n        originalUrl.path = null;\r\n        originalUrl.pathname = collapseLeadingSlashes(originalUrl.pathname + \"/\");\r\n        // reformat the URL\r\n        var loc = encodeUrl(url.format(originalUrl));\r\n        var doc = createHtmlDocument(\"Redirecting\", 'Redirecting to <a href=\"' + escapeHtml(loc) + '\">' + escapeHtml(loc) + \"</a>\");\r\n        // send redirect response\r\n        res.statusCode = 301;\r\n        res.setHeader(\"Content-Type\", \"text/html; charset=UTF-8\");\r\n        res.setHeader(\"Content-Length\", Buffer.byteLength(doc));\r\n        res.setHeader(\"Content-Security-Policy\", \"default-src 'none'\");\r\n        res.setHeader(\"X-Content-Type-Options\", \"nosniff\");\r\n        res.setHeader(\"Location\", loc);\r\n        res.end(doc);\r\n    };\r\n}\r\n//# sourceMappingURL=serve-static.js.map"]}